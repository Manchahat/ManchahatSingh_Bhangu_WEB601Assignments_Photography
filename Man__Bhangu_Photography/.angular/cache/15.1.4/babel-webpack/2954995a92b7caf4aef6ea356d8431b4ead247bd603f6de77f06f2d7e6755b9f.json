{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HoverAffectDirective {\n  // renderer: any;\n  // originalBorder: any;\n  constructor(el) {\n    this.el = el;\n    this.hoverAffect = \"\";\n  }\n  onMouseEnter() {\n    debugger;\n    if (this.hoverAffect === 'underline') {\n      this.el.nativeElement.style.textDecoration = 'underline';\n    } else if (this.hoverAffect === 'bold') {\n      this.el.nativeElement.style.fontWeight = 'bold';\n    }\n  }\n  onmouseleave() {\n    if (this.hoverAffect === 'underline') {\n      this.el.nativeElement.style.textDecoration = 'none';\n    } else if (this.hoverAffect === 'bold') {\n      this.el.nativeElement.style.fontWeight = 'normal';\n    }\n  }\n}\nHoverAffectDirective.ɵfac = function HoverAffectDirective_Factory(t) {\n  return new (t || HoverAffectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHoverAffectDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: HoverAffectDirective,\n  selectors: [[\"\", \"appHoverAffect\", \"\"]],\n  hostBindings: function HoverAffectDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HoverAffectDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HoverAffectDirective_mouseleave_HostBindingHandler() {\n        return ctx.onmouseleave();\n      });\n    }\n  },\n  inputs: {\n    hoverAffect: \"hoverAffect\"\n  }\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,oBAAoB;EAG/B;EACA;EAIAC,YAAmBC,EAAa;IAAb,OAAE,GAAFA,EAAE;IAPA,gBAAW,GAAS,EAAE;EAS3C;EAE6BC,YAAY;IACvC;IACC,IAAI,IAAI,CAACC,WAAW,KAAK,WAAW,EAAE;MACpC,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,CAACC,cAAc,GAAG,WAAW;KACzD,MAAM,IAAI,IAAI,CAACH,WAAW,KAAK,MAAM,EAAE;MACvC,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,CAACE,UAAU,GAAG,MAAM;;EAEpD;EAGgCC,YAAY;IACxC,IAAI,IAAI,CAACL,WAAW,KAAK,WAAW,EAAE;MACnC,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,CAACC,cAAc,GAAG,MAAM;KACpD,MAAM,IAAI,IAAI,CAACH,WAAW,KAAK,MAAM,EAAE;MACrC,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,CAACE,UAAU,GAAG,QAAQ;;EAGvD;;AA7BUR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAU;EAAAC;IAAA;;eAApBC,kBAAc;MAAA;QAAA,OAAdA,kBAAc;MAAA","names":["HoverAffectDirective","constructor","el","onMouseEnter","hoverAffect","nativeElement","style","textDecoration","fontWeight","onmouseleave","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\Varinder Kaur\\Desktop\\Mann\\Bhangu\\ManchahatSingh_Bhangu_WEB601Assignments_Photography\\Man__Bhangu_Photography\\src\\app\\hover-affect.directive.ts"],"sourcesContent":["import { EmptyExpr } from '@angular/compiler';\r\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appHoverAffect]'\r\n})\r\nexport class HoverAffectDirective {\r\n @Input('hoverAffect') hoverAffect: string=\"\";\r\n  styleType: string | undefined;\r\n  // renderer: any;\r\n  // originalBorder: any;\r\n\r\n \r\n   \r\n  constructor(public el:ElementRef) { \r\n    \r\n  }\r\n  \r\n   @HostListener('mouseenter') onMouseEnter(){\r\n    debugger\r\n     if (this.hoverAffect === 'underline') {\r\n       this.el.nativeElement.style.textDecoration = 'underline';\r\n     } else if (this.hoverAffect === 'bold') {\r\n      this.el.nativeElement.style.fontWeight = 'bold';\r\n    }\r\n } \r\n \r\n \r\n     @HostListener('mouseleave') onmouseleave(){\r\n     if (this.hoverAffect === 'underline') {\r\n        this.el.nativeElement.style.textDecoration = 'none';\r\n      } else if (this.hoverAffect === 'bold') {\r\n         this.el.nativeElement.style.fontWeight = 'normal';\r\n     }\r\n      \r\n   }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}